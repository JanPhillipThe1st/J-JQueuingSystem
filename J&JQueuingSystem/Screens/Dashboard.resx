<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnViewCustomers.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARySURBVEhL7ZVfTFtVHMdr9EXjg4/GbD74YIwhmiUmaiiD
        SWEgtLTQXlqB8kc22ByyBY0xPmAsLTAoltGW0vYy/nXAvRPHiiK8zBizqAnCPff8DpUsxtiIiS8iib5o
        cjz39pYVAqOLmmjcN7lv3/DJ98OPg+5e/h85vyg1ty9L0bZlWTj3CfsWQTj7EfsWgDt9HT+u1XbinFi5
        4JxcFZwzINRdAaEmBoJ9UhbsE6jIJuCHtdrhaV+S3n19SYK2JUzPLWL62sdAzywAbZ0HsWWeOKyzNx+0
        CcL9Wl3HoFFnTPqlbhpobQzoK1NA7ROYcmMobB1FRVrt8LQvg61NXZoBjQNtuQ701DUcb7q2/pgC1+q6
        mhh21cZwgi1VoY5JoNXjQLnLmNp4WdBqh6ftxsYRptfWuoDE1nmcvA0F2jAnbTZdxfFGkTjqhJT22om1
        HAZ8wz6FE/aJlW0VOgbUNgq0KoqTlrAsWIaZdn8W2s98KB9tWUDcqXkknmZwBdo8B/TVD4A2ikDrZ0B0
        zt7WzjG4YxK7uFH40nZ5ZVuF8kArI0DNI0CNQRQ2DpHstTfPIa5pDomZ0AaBgWeBOmdw3H5lt/YqHrss
        PE6o0ChQSxhoRYhQUxBouR+y197AljeKDC4isX4GJ9NQ5ZC4mLTJjihunyQO23hKuyW6llPJr3eYR3DC
        PLSyrUKHCTUGCC0bgmTpIAilPpKd9oZpBp9FXP0MEtnKZOb1KofEjYNoG2PavSntluBaTsUIdlUEyRcG
        BlehfkJfvkRoiQ/oyQEIF/ffhfYaBq+dRqICrcm8XvWQcNwUZdoZXKvrjAHsKhvCCRU6xKCDhJ58n9Di
        AaBF3rvQXs2W10wizjGFRPanktx9vdKmJYLjlhHZbglvHFH6ZWx5mX+9o3QQJwy+le0UlFCDl9DCi5As
        6AGhoBcKyzt/eEgF3CnVo/JRO4NbeenzY534j53r1Q7JHIJQRQgKtbquyEdySnzEVdwHZAfaR+hLvYQy
        MC3wkLf03d88odUPj3lEGi+OoN/2ud6vTEH5Ta2mhd5X5CWCoV+DXlSghOZ3E5rnxrzehUu04v7J77zx
        gDVKXrTyaIw9DLeeYYvTUFMI/64cUnlAfsc0jJ9O9VcfKfYmShRoYR8kM6HPe+Dn3C70td4l1+V34kdV
        wEFJQXGfdRT/+uweaLkfbZQGJL5kUHrBJlD1HVegTC2/d6kC1Xvkz/K60Nv5bvSU+sPvFGWpAt2rV1mq
        QLWaFqZ3gOlN/04z9CpLFahW3D+79cKtvUsVaFkQ9ShLU/0Mvf0H6HWjtkOX/nf0HnC9/7zeg643G71V
        UfRcFS97steL/x69lfzqpYrw6o/Z6WWv01/RmxkLL5+vjMiflvvwlvKxB+EnY1D6jj0O76X1ZsbQvz5w
        oht/m9uLt3J78NZxD3zPXqObx7vI2ayWplMVkQsqQ7jDHMAR9h8mYgrigNGP+9hzeCytNzOGHuBO9JJe
        Bo3kunEkzw1evZtc0HvIk1rlXv4t0en+BNCdNLvx0xB/AAAAAElFTkSuQmCC
</value>
  </data>
</root>